panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# legend.background = element_rect(fill='transparent'),
# legend.box.background = element_rect(fill='transparent')
)+
ylab(expression(paste('Mg C' ~ha^-1)))
ggsave(paste0(output,'cummulative_NEE_Uxx_', year,'.png'), height=13, width=30, units="cm")#, bg='transparent')
colnames(data)
data_summary(data, c("GPP_ANN", "RECO_ANN", "GPP_DT", "TK_GPP_DT", "Reco_DT", "TK_Reco_DT", "CO2_Soil_Flux"), c("Year", "Hour"))->summary_diel
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=RECO_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=RECO_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=Reco_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=Reco_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_Reco_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_Reco_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=CO2_Soil_Flux, group=1),color='black')+
geom_point(aes(y=CO2_Soil_Flux), color='black')+
# geom_hline(yintercept=0, color = "red")+
scale_y_continuous(breaks = c(-20,-15,-10,-5,0,5,10))+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=RECO_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=RECO_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=Reco_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=Reco_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_Reco_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_Reco_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=CO2_Soil_Flux/3600/12*1000, group=1),color='black')+
geom_point(aes(y=CO2_Soil_Flux/3600/12*1000), color='black')+
# geom_hline(yintercept=0, color = "red")+
scale_y_continuous(breaks = c(-20,-15,-10,-5,0,5,10))+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
ggsave(paste0(output,"Diel_Reco_soil.png"), height=22, width=24, units="cm")
data%>%select(Time, Year, Day,Hour, TA_1_1_1, Tair, PPFD_IN_1_1_1, SW_POT, Rg, P_1_1_1_Tot,VPD, TS_AVG_x_1_z, SWC_AVG_x_1_z )%>%mutate(Day=as_date(Day), Hour=as_hms(Time))->set
summary<-data_summary(set, c("TA_1_1_1", "Tair", "PPFD_IN_1_1_1", "SW_POT", "Rg", "P_1_1_1_Tot", "VPD", "TS_AVG_x_1_z", "SWC_AVG_x_1_z"), c("Year","Hour"))
ggplot(summary, aes(Hour, Tair))+
geom_point()+
geom_line()+
facet_wrap(~Year)
ggplot(summary, aes(Hour, Tair))+
geom_point()+
geom_line()+
facet_wrap(~Year)+
theme_complete_bw()
ggsave(paste0(output,"Tair.png"), height=22, width=24, units="cm")
ggplot(summary, aes(Hour, PPFD_IN_1_1_1))+
geom_point()+
geom_line()+
facet_wrap(~Year)+
theme_complete_bw()
ggsave(paste0(output,"PPFD.png"), height=22, width=24, units="cm")
data%>%filter(!is.na(TK_FP_errorcode))->q
View(q)
q%>%filter(Year==2022)->q2022
q%>%filter(Year==2023)->q2023
View(q2022)
sum(q2022$TK_FP_qc==0)
sum(q2023$TK_FP_qc==0)
ggplot(data, aes(TK_FP_RRef, FP_RRef))+
geom_point()
ggplot(data, aes(TK_FP_RRef_Night, FP_RRef_Night))+
geom_point()
q2022%>%select(TK_FP_RRef_Night, FP_RRef_Night, TK_FP_RRef, FP_RRef)->s2022
View(s2022)
q2023%>%select(TK_FP_RRef_Night, FP_RRef_Night, TK_FP_RRef, FP_RRef)->s2023
View(s2023)
q2022%>%select(TK_FP_RRef_Night, FP_RRef_Night, TK_FP_RRef, FP_RRef, TK_FP_qc, FP_qc)->s2022
View(s2022)
unique(s2022$FP_RRef_Night)
unique(s2023$FP_RRef_Night)
unique(s2022$FP_RRef)
unique(s2023$FP_RRef)
remove(list=ls())
{library(tidyverse, quietly = T)
library(hms)
library(REddyProc)}
Sys.setenv(TZ = "GMT")
user="rdaelman"
wd=dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
source('Extra scripts/theme_complete_bw.R')
source('Extra scripts/summary_stat.R')
input<- paste0(wd, "/Final_EC_output/")
output<- paste0("C:/Users/rdaelman/OneDrive - UGent/CongoFlux/Analyses/Final_EC_output/")
is.outlier <- function (x) {
x < quantile(x, .25, na.rm=T) - 1.5 * IQR(x, na.rm=T) |
x > quantile(x, .75, na.rm=T) + 1.5 * IQR(x, na.rm=T)
}
#--- Load data
lst<-list.files(input, full.names = T)
lst<-lst[grep("Export", lst)]
lst<-lst[-c(length(lst)-1,length(lst))]
data<-read.csv(lst[1], header=T, sep=",",)
for (i in 2:length(lst)){
data<-rbind(data, read.csv(lst[i], header=T, sep=","))
}
data%>%mutate(Time=as.POSIXct(Time, format="%Y-%m-%d %H:%M"), Day=as.POSIXct(Day, format="%Y-%m-%d"), Hour=as_hms(Hour))%>%filter(!is.na(Year))->data
latitude <- 0.814446
longitude <- 24.502498
MT<- as_hms("06:30:00")
NT<- as_hms("18:30:00")
tz<- 2
h<-48
data%>%select(Time, Year, Day,Hour, TA_1_1_1, Tair, PPFD_IN_1_1_1, SW_POT, Rg, P_1_1_1_Tot,VPD, TS_AVG_x_1_z, SWC_AVG_x_1_z )%>%mutate(Day=as_date(Day), Hour=as_hms(Time))->set
summary<-data_summary(set, c("TA_1_1_1", "Tair", "PPFD_IN_1_1_1", "SW_POT", "Rg", "P_1_1_1_Tot", "VPD", "TS_AVG_x_1_z", "SWC_AVG_x_1_z"), c("Year","Hour"))
View(summary)
ggplot(summary, aes(Hour, TA_1_1_1))+
geom_errorbar(aes(ymin=TA_1_1_1_q1, ymax=TA_1_1_1_q3), width=.5)
ggplot(summary, aes(Hour, TA_1_1_1))+
geom_errorbar(aes(ymin=TA_1_1_1_q1, ymax=TA_1_1_1_q3), width=.5)+
geom_point()+
geom_line()+
facet_wrap(~Year)+
theme_complete_bw()
ggsave(paste0(output,"TAIR.png"), height=22, width=24, units="cm")
####-------------------------------------------####
####-------------- weights of ANN -------------####
####-------------------------------------------####remove(list=ls())
{library(tidyverse, quietly = T)
library(hms)
library(REddyProc)}
Sys.setenv(TZ = "GMT")
user="rdaelman"
wd=dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
#--- Load data
lst<-list.files(input, full.names = T)
input<-paste0(wd,"/IW/")
output<- paste0("C:/Users/rdaelman/OneDrive - UGent/CongoFlux/Analyses/Final_EC_output/")
#--- Load data
lst<-list.files(input, full.names = T)
source("~/GitHub/Partitioning_ANN/Test_output/MaxDriver/Selected/get_weights.R", echo=TRUE)
####-------------------------------------------####
####-------------- weights of ANN -------------####
####-------------------------------------------####remove(list=ls())
{library(tidyverse, quietly = T)
library(hms)
library(REddyProc)}
Sys.setenv(TZ = "GMT")
user="rdaelman"
wd=dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
input<-paste0(wd,"/IW/")
output<- paste0("C:/Users/rdaelman/OneDrive - UGent/CongoFlux/Analyses/Final_EC_output/")
is.outlier <- function (x) {
x < quantile(x, .25, na.rm=T) - 1.5 * IQR(x, na.rm=T) |
x > quantile(x, .75, na.rm=T) + 1.5 * IQR(x, na.rm=T)
}
#--- Load data
lst<-list.files(input, full.names = T)
lsy
lst
data<-read.csv(lst[1], header=T, sep=",",)
View(data)
data<-read.csv(lst[1], header=F, sep=",")
View(data)
list$file<-lst
lsit<-data.frame()
list$file<-lst
lst%>%mutate(Year=substr(.x, nchar(.x-13), nchar(.x-10))->list
lst%>%mutate(Year=substr(.x, nchar(.x-13), nchar(.x-10)))->list
lst%>%mutate(Year=substr(.x, nchar(.x-13), nchar(.x-10)))->list
list<-substr(lst, nchar(lst)-13, nchar(lst-10))
?gsub
nchar(lst[1])
list<-substr(lst, 104, 117)
list<-lst%>%data.frame(file=.)%>%mutate(name=substr(file, 104, 117))%>%extract(name, c("Year", "model", "variable"), "^(\\d{4})_(\\d{1})(\\d{3})")
View(list)
list<-lst%>%data.frame(file=.)%>%mutate(name=substr(file, 104, 117))
list<-lst%>%data.frame(file=.)%>%mutate(name=substr(file, 104, 117), Year=substr(name, 1,4), Model=substr(name, 6,6), Predictor=substr(name, 9,9))
#--- Load data
lst<-list.files(input, full.names = T)
colnames1<-c('RadDaily','RadDailySeas','SW_IN_POT','SW_IN_f','dSW_IN_POT','Tair_f','VPD_f','SWC_f','WS_f','cos_wd','sin_wd','GPPDailyprov')
colnames2<-()
list<-lst%>%data.frame(file=.)%>%mutate(name=substr(file, 104, 117), Year=substr(name, 1,4), Model=substr(name, 6,6), Predictor=substr(name, 9,9))
lst1<-lst%>%filter(Predictor=="1")%>%select(file)
typeof(list$Predictor[1])
list<-lst%>%data.frame(file=.)%>%mutate(name=substr(file, 104, 117), Year=substr(name, 1,4), Model=as.numeric(substr(name, 6,6)), Predictor=as.numeric(substr(name, 9,9)))
lst1<-lst%>%filter(Predictor==1)%>%select(file)
lst1<-list%>%filter(Predictor==1)%>%select(file)
lst2<-list%>%filter(Predictor=="2")%>%select(file)
lst3<-list%>%filter(Predictor=="3")%>%select(file)
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", dec = ",", col.names = colnames1)
View(Pred1)
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>% mutate(Model=lst1$Model[1], Year=lst1$Year[1]))
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>% mutate(Model=lst1$Model[1], Year=lst1$Year[1])
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>% mutate(Model=lst1$Model[1], Year=lst1$Year[1])
View(Pred1)
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[1], Year=lst1$Year[1])
lst1<-list%>%filter(Predictor==1)
lst2<-list%>%filter(Predictor==2)
lst3<-list%>%filter(Predictor==3)
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[1], Year=lst1$Year[1])
Pred2<-read.csv(lst2$file[1], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[1], Year=lst2$Year[1])
Pred3<-read.csv(lst3$file[1], header = F, sep = ",", col.names = colnames3)%>%mutate(Model=lst3$Model[1], Year=lst3$Year[1])
Pred2<-read.csv(lst2$file[1], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[1], Year=lst2$Year[1])
#--- Load data
lst<-list.files(input, full.names = T)
colnames1<-c('RadDaily','RadDailySeas','SW_IN_POT','SW_IN_f','dSW_IN_POT','Tair_f','VPD_f','SWC_f','WS_f','cos_wd','sin_wd','GPPDailyprov')
colnames2<-c('cos_doy','sin_doy','Tair_f','TS_f','SWC_f','WS_f','cos_wd','sin_wd','NeeNightime')
colnames3<-c('SW_IN_f')
list<-lst%>%data.frame(file=.)%>%mutate(name=substr(file, 104, 117), Year=substr(name, 1,4), Model=as.numeric(substr(name, 6,6)), Predictor=as.numeric(substr(name, 9,9)))
lst1<-list%>%filter(Predictor==1)
lst2<-list%>%filter(Predictor==2)
lst3<-list%>%filter(Predictor==3)
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[1], Year=lst1$Year[1])
Pred2<-read.csv(lst2$file[1], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[1], Year=lst2$Year[1])
Pred3<-read.csv(lst3$file[1], header = F, sep = ",", col.names = colnames3)%>%mutate(Model=lst3$Model[1], Year=lst3$Year[1])
for (i in 1:nrow(lst1)){
Pred1<-merge(Pred1, read.csv(lst1$file[i], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[i], Year=lst1$Year[i]))
Pred2<-merge(Pred2, read.csv(lst2$file[i], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[i], Year=lst2$Year[i]))
Pred3<-merge(Pred3, read.csv(lst3$file[i], header = F, sep = ",", col.names = colnames3)%>%mutate(Model=lst3$Model[i], Year=lst3$Year[i]))
}
nrow(lst1)
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[1], Year=lst1$Year[1])
Pred2<-read.csv(lst2$file[1], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[1], Year=lst2$Year[1])
Pred3<-read.csv(lst3$file[1], header = F, sep = ",", col.names = colnames3)%>%mutate(Model=lst3$Model[1], Year=lst3$Year[1])
Pred1<-merge(Pred1, read.csv(lst1$file[i], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[i], Year=lst1$Year[i]))
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[1], Year=lst1$Year[1])
v<-read.csv(lst1$file[i], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[i], Year=lst1$Year[i])
Pred1<-rbin(Pred1, read.csv(lst1$file[i], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[i], Year=lst1$Year[i]))
Pred1<-read.csv(lst1$file[1], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[1], Year=lst1$Year[1])
Pred2<-read.csv(lst2$file[1], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[1], Year=lst2$Year[1])
Pred3<-read.csv(lst3$file[1], header = F, sep = ",", col.names = colnames3)%>%mutate(Model=lst3$Model[1], Year=lst3$Year[1])
for (i in 2:nrow(lst1)){
Pred1<-rbind(Pred1, read.csv(lst1$file[i], header = F, sep = ",", col.names = colnames1)%>%mutate(Model=lst1$Model[i], Year=lst1$Year[i]))
Pred2<-rbind(Pred2, read.csv(lst2$file[i], header = F, sep = ",", col.names = colnames2)%>%mutate(Model=lst2$Model[i], Year=lst2$Year[i]))
Pred3<-rbind(Pred3, read.csv(lst3$file[i], header = F, sep = ",", col.names = colnames3)%>%mutate(Model=lst3$Model[i], Year=lst3$Year[i]))
}
View(Pred1)
lst<-list.files(paste0(wd, '/Perm/'), full.names = T)
Perm<-read.csv(paste0(wd, '/header_perm.csv'))
View(Perm)
Perm<-read.csv(paste0(wd, '/header_perm.csv'))
i=1
Perm<-cbind(Perm, read.csv(i,header=F))
i=lst[1]
Perm<-cbind(Perm, read.csv(i,header=F))
View(Perm)
lst<-list.files(paste0(wd, '/Perm/'), full.names = T)
Perm<-read.csv(paste0(wd, '/header_perm.csv'))
for (i in lst){
Perm<-cbind(Perm, read.csv(i,header=F))
}
View(Perm)
colnames(Perm)<-c('Variable', 'For', 'Model1_2022', 'Model2_2022','Model3_2022','Model4_2022','Model5_2022','Model1_2023', 'Model2_2023','Model3_2023','Model4_2023','Model5_2023' )
ANN_file<-read.csv("C:/Users/rdaelman/OneDrive - UGent/Documents/GitHub/Partitioning_ANN/Test_output/MaxDriver/Selected/CD-Ygb_ANN_partitioning.csv")
Sys.setenv(TZ = "GMT")
user="rdaelman"
wd=dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
source('Extra scripts/theme_complete_bw.R')
source('Extra scripts/summary_stat.R')
input<- paste0(wd, "/Final_EC_output/")
output<- paste0("C:/Users/rdaelman/OneDrive - UGent/CongoFlux/Analyses/Final_EC_output/")
is.outlier <- function (x) {
x < quantile(x, .25, na.rm=T) - 1.5 * IQR(x, na.rm=T) |
x > quantile(x, .75, na.rm=T) + 1.5 * IQR(x, na.rm=T)
}
#--- Load data
lst<-list.files(input, full.names = T)
lst<-lst[grep("Export", lst)]
lst
lst<-lst[-c(length(lst)-1,length(lst))]
lst
lst<)lst[-2]
lst<-lst[-2]
lst
data<-read.csv(lst[1], header=T, sep=",",)
for (i in 2:length(lst)){
data<-rbind(data, read.csv(lst[i], header=T, sep=","))
}
data%>%mutate(Time=as.POSIXct(Time, format="%Y-%m-%d %H:%M"), Day=as.POSIXct(Day, format="%Y-%m-%d"), Hour=as_hms(Hour))%>%filter(!is.na(Year))->data
latitude <- 0.814446
longitude <- 24.502498
MT<- as_hms("06:30:00")
NT<- as_hms("18:30:00")
tz<- 2
h<-48
data_summary(data, c("GPP_ANN", "RECO_ANN", "GPP_DT", "TK_GPP_DT", "Reco_DT", "TK_Reco_DT", "CO2_Soil_Flux"), c("Year", "Hour"))->summary_diel
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=GPP_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=GPP_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=GPP_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=GPP_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_GPP_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_GPP_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
# geom_hline(yintercept=0, color = "red")+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=RECO_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=RECO_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=Reco_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=Reco_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_Reco_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_Reco_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=CO2_Soil_Flux/3600/12*1000, group=1),color='black')+
geom_point(aes(y=CO2_Soil_Flux/3600/12*1000), color='black')+
# geom_hline(yintercept=0, color = "red")+
scale_y_continuous(breaks = c(-20,-15,-10,-5,0,5,10))+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
data_summary(data, c("NEE_U50_f","GPP_ANN", "RECO_ANN", "GPP_DT", "TK_GPP_DT", "Reco_DT", "TK_Reco_DT"), c("Year", "Hour"))->summary_diel
summary_diel%>%mutate(GPP_ANN=-1*GPP_ANN, GPP_DT=-1*GPP_DT, TK_GPP_DT=-1*TK_GPP_DT)->summary_diel
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=GPP_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=GPP_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=GPP_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=GPP_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_GPP_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_GPP_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=RECO_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=RECO_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=Reco_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=Reco_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_Reco_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_Reco_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=NEE_U50_f, group=1),color=rgb(253, 231, 37, maxColorValue = 255))+
geom_point(aes(y=NEE_U50_f), color=rgb(253, 231, 37, maxColorValue = 255))+
geom_hline(yintercept=0, color = "red")+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=GPP_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=GPP_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=GPP_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=GPP_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_GPP_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_GPP_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=RECO_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=RECO_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=Reco_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=Reco_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_Reco_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_Reco_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=NEE_U50_f, group=1),color=rgb(253, 231, 37, maxColorValue = 255))+
geom_point(aes(y=NEE_U50_f), color=rgb(253, 231, 37, maxColorValue = 255))+
geom_line(aes(y=GPP_ANN+RECO_ANN, group=1),color='red')+
geom_point(aes(y=GPP_ANN+RECO_ANN), color='red')+
geom_hline(yintercept=0, color = "red")+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
ggplot(summary_diel, aes(x=Hour))+
geom_line(aes(y=GPP_ANN+RECO_ANN, group=1),color=rgb(94, 201, 98, maxColorValue = 255))+
geom_point(aes(y=GPP_ANN+RECO_ANN), color=rgb(94, 201, 98, maxColorValue = 255))+
geom_line(aes(y=GPP_DT+Reco_DT, group=1),color=rgb(33, 145, 140, maxColorValue = 255))+
geom_point(aes(y=GPP_DT+Reco_DT), color=rgb(33, 145, 140, maxColorValue = 255))+
geom_line(aes(y=TK_GPP_DT+TK_Reco_DT, group=1),color=rgb(68, 1, 84, maxColorValue = 255))+
geom_point(aes(y=TK_GPP_DT+TK_Reco_DT), color=rgb(68, 1, 84, maxColorValue = 255))+
geom_line(aes(y=NEE_U50_f, group=1),color=rgb(253, 231, 37, maxColorValue = 255))+
geom_point(aes(y=NEE_U50_f), color=rgb(253, 231, 37, maxColorValue = 255))+
geom_hline(yintercept=0, color = "red")+
theme_complete_bw()+
ylab(expression(paste(mu,'mol' ~m^-2~s^-1)))+
facet_wrap(.~Year, ncol=2)
View(Perm)
View(Perm)
write.csv(Perm, paste0(output, 'Perm.csv'), row.names = F)
View(Pred2)
View(Pred3)
###Check if there are new IR_TOP files to be added
output_dir <- "C:/Users/rdaelman/OneDrive - UGent/CongoFlux_Data/BC_Data/AE33/2024"
###Read list of all IR files on One Drive
lst<-list.files(output_dir, full.names=TRUE)
dates_directory = as.character(as.numeric(gsub(".*?([0-9]+).*([0-9]+).*", "\\1", lst)))
lst<-grep("AE33_AE33",lst,value=TRUE)
dates_directory = as.character(substr(lst, nchar(lst)-15, nchar(lst)-4)))))
dates_directory = as.character(substr(lst, nchar(lst)-15, nchar(lst)-4))))
dates_directory = as.character(substr(lst, nchar(lst)-15, nchar(lst)-4)))
dates_directory = as.character(substr(lst, nchar(lst)-15, nchar(lst)-4))
dates_directory[1]
dates_directory = as.character(substr(lst, nchar(lst)-8, nchar(lst)-4))
dates_directory[1]
dates_directory = as.character(substr(lst, nchar(lst)-11, nchar(lst)-4))
dates_directory[1]
dates_directory_split<-dates_directory%>%
data.frame(string = .) %>%
extract(string, c("year","month","day"), "^(\\d{4})(\\d{2})(\\d{2})", remove = FALSE)
View(dates_directory_split)
dates_directory_split$Time<-as.POSIXct(paste0(dates_directory_split$year,"-",dates_directory_split$month,"-",dates_directory_split$day), format="%Y-%m-%d")
dates_directory_split$Time<-as.POSIXct(dates_directory_split$Time,format="%Y-%m-%d")
max_date_directory<-max(dates_directory_split$Time)
total<-data.frame(read.csv(unz(lst[1],utils::unzip(lst[1], list=TRUE)$Name),sep=",",skip=3, stringsAsFactors = FALSE, header=TRUE))
total<-data.frame(read.csv(lst[1],sep=",",skip=6, stringsAsFactors = FALSE, header=TRUE))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=0, stringsAsFactors = FALSE, header=TRUE))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=3, stringsAsFactors = FALSE, header=TRUE))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=4, stringsAsFactors = FALSE, header=TRUE))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=4, header=TRUE))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=5, header=TRUE))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=5, header=F))
View(total)
total<-data.frame(read.csv(lst[1],sep="\t",skip=6, header=F))
View(total)
total<-data.frame(read.csv(lst[1],sep=" ",skip=6, header=F))
View(total)
if(length(lst)>1){
for (i in 2:length(lst)){
new<-data.frame(read.csv(lst[i],sep=" ",skip=6, header=F))
total<-rbind(total, new)
}
}
i
lst[2]
new<-data.frame(read.csv(lst[i],sep=" ",skip=6, header=F))
View(new)
new<-data.frame(read.csv(lst[3],sep=" ",skip=6, header=F))
new<-data.frame(read.csv(lst[40],sep=" ",skip=6, header=F))
total<-data.frame(read.csv(lst[2],sep=" ",skip=6, header=F))
for (i in 3:length(lst)){
new<-data.frame(read.csv(lst[i],sep=" ",skip=6, header=F))
total<-rbind(total, new)
}
View(new)
lst
lst[i]
bc_data<-total
headings_bc<-data.frame(read.csv(lst[2], sep=";", header=F, skip=5))[1,]
View(headings_bc)
total<-data.frame(read.csv(lst[1],sep=" ",skip=6, header=F))
if(length(lst)>1){
for (i in 2:length(lst)){
new<-data.frame(read.csv(lst[i],sep=" ",skip=6, header=F))[,1:67]
total<-rbind(total, new)
}
}
headings_bc<-data.frame(read.csv(lst[2], sep=" ", header=F, skip=5))[1,]
colnames(bc_data)<-headings_bc
View(bc_data)
headings_bc[1,1]<-Time
headings_bc[1,1]<-"Time"
colnames(bc_data)<-headings_bc
bc_data<-total
View(bc_data)
headings_bc<-data.frame(read.csv(lst[2], sep=" ", header=F, skip=5))[1,]
headings_bc[1,1]<-"Time"
colnames(bc_data)<-headings_bc
headings_bc<-data.frame(read.csv(lst[2], sep=" ", header=F, skip=5))[1,1:67]
headings_bc[1,1]<-"Time"
colnames(bc_data)<-headings_bc
headings_bc<-data.frame(read.csv(lst[2], sep=" ", header=F, skip=5))[1,1:67]
colnames(bc_data)<-headings_bc
headings_bc<-data.frame(read.csv(lst[2], sep=" ", header=F, skip=5))[1,1:67]
headings_bc[1,1]<-"Date"
headings_bc[1,2]<-"time"
colnames(bc_data)<-headings_bc
bc_data$Time<-as.POSIXct(paste0(Date, " ", time), format="%Y-%m-%d %H:%M:%S")
bc_data$Time<-as.POSIXct(paste0(bc_data$Date, " ", bc_data$time), format="%Y-%m-%d %H:%M:%S")
bc_data$Time_HH<-ceiling_date(bc_data$Time, "30 minutes")
bc_data$Time<-as.POSIXct(paste0(substr(bc_data$Date, 1,4), "-", substr(bc_data$Date, 5,6),"-", substr(bc_data$Date, 7,8), " ", bc_data$time), format="%Y-%m-%d %H:%M:%S")
View(bc_data)
bc_data$Time<-as.POSIXct(paste0(substr(bc_data$Date, 1,4), "-", substr(bc_data$Date, 6,7),"-", substr(bc_data$Date, 9,10), " ", bc_data$time), format="%Y-%m-%d %H:%M:%S")
bc_data$Time_HH<-ceiling_date(bc_data$Time, "30 minutes")
View(total)
View(headings_bc)
headings_bc[1,1]<-"Date"
headings_bc[1,2]<-"time"
colnames(bc_data)<-headings_bc
bc_data$Time<-as.POSIXct(paste0(substr(bc_data$Date, 1,4), "-", substr(bc_data$Date, 6,7),"-", substr(bc_data$Date, 9,10), " ", bc_data$time), format="%Y-%m-%d %H:%M:%S")
bc_data$Time_HH<-ceiling_date(bc_data$Time, "30 minutes")
bc_data%>%group_by(Time_HH)%>%dplyr::summarise(across(`RefCh1;`: `K7;`, ~mean(.x, na.rm=T)))-> bc_data_HH
total<-data.frame(read.csv(lst[1],sep=" ",skip=6, header=F))[,1:67]
if(length(lst)>1){
for (i in 2:length(lst)){
new<-data.frame(read.csv(lst[i],sep=" ",skip=6, header=F))[,1:67]
total<-rbind(total, new)
}
}
bc_data<-total
headings_bc<-data.frame(read.csv(lst[2], sep=" ", header=F, skip=5))[1,1:67]
headings_bc[1,1]<-"Date"
headings_bc[1,2]<-"time"
colnames(bc_data)<-headings_bc
bc_data$Time<-as.POSIXct(paste0(substr(bc_data$Date, 1,4), "-", substr(bc_data$Date, 6,7),"-", substr(bc_data$Date, 9,10), " ", bc_data$time), format="%Y-%m-%d %H:%M:%S")
bc_data$Time_HH<-ceiling_date(bc_data$Time, "30 minutes")
bc_data%>%group_by(Time_HH)%>%dplyr::summarise(across(`RefCh1;`: `K7;`, ~mean(.x, na.rm=T)))-> bc_data_HH
colnames(bc_data_HH)[1]<-"Time"
timez<- bc_HH[which(bc_HH$Time %in% bc_data_HH$Time),1]
View(dates_directory_split)
lst<-list.files(paste0(wd, '/Perf/'), full.names = T)
Perf<-read.csv(lst[1])
Perf<-read.csv(lst[1], header=F)
wd=dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
lst<-list.files(paste0(wd, '/Perf/'), full.names = T)
Perf<-read.csv(lst[1], header=F)
View(Perf)
nchar(lst[1])
Perf<-Perf%>%mutate(Year=lst[1]%>%substr(106,109), Model=lst[1]%>%substr(111,111))
View(Perf)
for (i in 2:length(lst)){
Perf<-rbind(Perf, read.csv(lst[i], header=F)%>%mutate(Year=lst[i]%>%substr(106,109), Model=lst[i]%>%substr(111,111)))
}
colnames(Perf)<-c('r','RMSE','MAE' 'm', 'Year', 'Model')
colnames(Perf)<-c('r','RMSE','MAE' , 'm', 'Year', 'Model')
View(Perf)
write.csv(Perf, paste0(output, 'Permf.csv'), row.names = F)
